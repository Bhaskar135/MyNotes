signup :
 1) Django provides us with a form class 'UserCreationForm' to register new user easily. By default
      it comes with three fields : username , password1, and password2.
 2) Create a new app : 'accounts' for sign up page.  
	python manage.py startapp accounts
	# blog_project/settings.py
	INSTALLED_APPS = [
		'accounts.apps.AccountsConfig',
	]
 3) Add a project-level url pointing to 'accounts' url..
	# blog_project/urls.py
	from django.contrib import admin
	from django.urls import path,include
	urlpatterns = [
    		path('admin/', admin.site.urls),
    		path('accounts/',include('django.contrib.auth.urls')),
    		path('accounts/',include('accounts.urls')),
    		path('', include('blog.urls')),
	]
 4) create accounts/urls.py
# accounts/urls.py
from django.urls import path
from .views import SignUpView
urlpatterns = [
    path('signup/',SignUpView.as_view(),name='signup'),
]

5) #templates/registration/login.html
 {% extends 'base.html' %}
{% block content %}
	<h2>Log In</h2>
	<form action="" method="post">
    	{% csrf_token %}
    	{{form.as_p}}
    	<button type="submit">Log In</button>
	</form>
	<a href="{% url 'signup' %}">Signup here</a>
{% endblock content %}


6) # accounts/views.py
from django.contrib.auth.forms import  UserCreationForm
from django.urls import reverse_lazy
from django.views import generic

class SignUpView(generic.CreateView):
    form_class=UserCreationForm
    success_url=reverse_lazy('login')
    template_name='signup.html'

7) make a 'signup.html' file in templates.
 <!-- templates/signup.html -->
{% extends 'base.html' %}
{% block content %}
    <h2>Sign up</h2>
<form action="" method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Sign up</button>
</form>
{% endblock content %}

8) python manage.py runserver






















