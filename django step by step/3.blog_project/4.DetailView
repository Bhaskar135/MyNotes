
1) # templates/home.html
	{% extends 'base.html' %}
	{% block content %}
    	{% for post in object_list %}
        	<div class="post-entry">
            		<h2><a href="{% url 'post_detail' post.pk %}">{{post.title}}</a></h2>
            		<p>{{post.body}}</p>
        	</div>
    	{% endfor %}
	{% endblock content %}

2) # blog/urls.py
from django.urls import path
from .views import BlogListView,BlogDetailView
urlpatterns = [
    path('post/<int:pk>/',BlogDetailView.as_view(),name='post_detail'),
    path('',BlogListView.as_view(),name='home'),
]

3) Now we can add the functionality for individual blog pages.Now we create a new view 'DetailView'
	# blog/views.py

	from django.views.generic import ListView,DetailView
	from .models import Post

	class BlogListView(ListView):
    	    model=Post
    	    template_name='home.html'

	class BlogDetailView(DetailView):
    	    model=Post
    	    template_name='post_detail.html'


4) By default DetailView will provide a context object we can use in our template called either 'object' or lowercased name of our model(here 'post').It's possible to explicitly name the context object in our view using 'context_object_name'.Also DetailView expects either a primary key or a slug passed to it as the identifier.

 # templates/post_detail.html
{% extends 'base.html' %}
{% block content %}
    <div class="post-entry">
        <h2>{{ post.title }}</h2>
        <p>{{ post.body }}</p>
    </div>
{% endblock content %}

5)python manage.py runserver
















