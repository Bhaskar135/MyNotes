
1) python manage.py migrate

2) # polls/models.py

from django.db import models
class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')
    
    def __str__(self):
        return self.question_text
    
    def was_published_recently(self):
        return self.pub_date >= timezone.now() - datetime.timedelta(days=1)  // means todays date minus 1 day


class Choice(models.Model):
    question = models.ForeignKey(Question, related_name='choices', on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)

    def __str__(self):
        return self.choice_text


3) python manage.py makemigrations polls

4) python manage.py migrate

5) python manage.py shell
>>> from polls.models import Question, Choice
>>> from django.utils import timezone
>>> q = Question(question_text="What's new?", pub_date=timezone.now())        # creating data
>>> q.save()
>>> q.question_text
>>> Question.objects.all()       #  retrieving data
>>> q.question_text = "What's up?"      #  updating data
>>> q.save()
>>> Question.objects.filter(id=1)
>>> Question.objects.filter(question_text__startswith='What')
>>> from django.utils import timezone
>>> current_year = timezone.now().year
>>> Question.objects.get(pub_date__year=current_year)   #  get the question that was published this year
>>> q=Question.objects.get(pk=1)
>>> q.was_published_recently()
>>> q.choices.all()    #  here choices is the related name.
>>> q.choices.create(choice_text='Not much', votes=0)
>>> q.choices.create(choice_text='The sky', votes=0)
>>> c = q.choices.create(choice_text='Just hacking again', votes=0)
>>> q.choices.all()
>>> q.choices.count()
>>> Choice.objects.filter(question__pub_date__year=current_year)        (__ is equal to where clause)
>>> c = q.choices.filter(choice_text__startswith='Just hacking')
>>> c.delete()

6) python manage.py createsuperuser

7) #polls/admin.py

from django.contrib import admin
from .models import Question
admin.site.register(Question)


















































